// import io.spring.gradle.dependencymanagement.DependencyManagementPlugin
// import org.springframework.boot.gradle.plugin.SpringBootPlugin
// /*
//  *
//  *  * Copyright (c) Crio.Do 2019. All rights reserved
//  *
//  */
// buildscript {
//     repositories {
//         mavenCentral()
//         maven {
//              url "https://plugins.gradle.org/m2/"
//          }
//     }
//     dependencies {
//         classpath("org.springframework.boot:spring-boot-gradle-plugin:$rootProject.ext.springBootVersion")
//         classpath "io.freefair.gradle:lombok-plugin:5.1.0"
//     }
// }

// apply plugin: SpringBootPlugin
// apply plugin: DependencyManagementPlugin

// configurations {
//     implementationOnly {
//         extendsFrom annotationProcessor
//     }
// }

// repositories {
//     mavenCentral()
// }

// jar {
//     archiveBaseName = "buildouts"
//     archiveVersion = "v1"
//     enabled = true
// }

// allprojects {
//     repositories {
//         maven {
//             url 'https://github.com/xetorthio/jedis'
//         }
//     }
// }

// dependencies {
//     def jacksonVersion = "2.9.8"
//     def jedisVersion = "3.3.0"

//     implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
//     compile("org.springframework.boot:spring-boot-starter-log4j2:$rootProject.ext.springBootVersion") {
//         exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
//         exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
//         exclude group: 'org.apache.logging.log4j', module: 'log4j-jul'
//         exclude group: 'org.slf4j', module: 'jul-to-slf4j'
//     }

//     // log4j2 dependencies
//     compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
//     compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
//     //compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.1'
//     compile group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.12.1'
//     compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.28'

//     // required for json layout
//     compile("com.fasterxml.jackson.core:jackson-core:$jacksonVersion")
//     compile("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
//     compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")

//     implementation "org.modelmapper:modelmapper:$rootProject.ext.modelMapperVersion"
//     implementation "org.springframework.boot:spring-boot-starter-web"
//     implementation group: "javax.inject", name: "javax.inject", version: "1"
//     implementation("org.springframework.boot:spring-boot-starter-actuator:$rootProject.ext.springBootVersion")
//     implementation "org.springframework.data:spring-data-redis:2.0.10.RELEASE"
//     implementation group: "com.google.guava", name: "guava", version: "20.0"
//     implementationOnly "org.projectlombok:lombok"
//     runtimeOnly "org.springframework.boot:spring-boot-devtools"
//     annotationProcessor "org.projectlombok:lombok"
//     implementation "io.springfox:springfox-swagger2:$rootProject.ext.swaggerVersion"
//     implementation "io.springfox:springfox-swagger-ui:$rootProject.ext.swaggerVersion"


//     // TODO: CRIO_TASK_MODULE_REDIS
//     // Objective:
//     // Add required the libraries for:
//     // 1. Jedis - A Java based Redis client (https://github.com/xetorthio/jedis)
//     // 2. Geohash (Use https://github.com/kungfoo/geohash-java)

//     //implementation "https://github.com/xetorthio/jedis"
//     //implementation "com.github.xetorthio:jedis"

//     implementation "org.springframework.boot:spring-boot-starter-data-redis:2.0.4.RELEASE"
//     compile("redis.clients:jedis:2.9.0")

//     compile "ch.hsr:geohash:1.3.0"



//     testCompile group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'
// //    testCompile "ai.grakn:redis-mock:0.1.3"

//     testImplementation("org.mockito:mockito-junit-jupiter:$rootProject.ext.mockitoVersion")
//     testImplementation("org.springframework.boot:spring-boot-starter-test:$rootProject.ext.springBootVersion") {
//         exclude group: "junit", module: "junit"
//     }

//     //testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo"
//     testImplementation("org.junit.jupiter:junit-jupiter-api:$rootProject.ext.junitVersion")
//     testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$rootProject.ext.junitVersion")
//     testImplementation("org.junit.platform:junit-platform-launcher" +
//             ":$rootProject.ext.junitPlatformLauncherVersion")
//     testImplementation("org.junit.jupiter:junit-jupiter-params:$rootProject.ext.junitVersion")

//        //compile group: 'org.springframework', name: 'spring-web', version: '5.0.8.RELEASE'
//        compile('org.springframework.boot:spring-boot-starter-webflux')
//        testCompile('org.springframework.boot:spring-boot-starter-test')
//        testCompile('io.projectreactor:reactor-test')
// }

// apply plugin: "io.freefair.lombok"

// configurations {
//     all {
//         exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
//     }
// }





//#####################################################################################

import io.spring.gradle.dependencymanagement.DependencyManagementPlugin
import org.springframework.boot.gradle.plugin.SpringBootPlugin

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8


buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$rootProject.ext.springBootVersion")
        classpath "io.freefair.gradle:lombok-plugin:5.1.0"
    }
}

apply plugin: SpringBootPlugin
apply plugin: DependencyManagementPlugin

dependencies {
    // implementation "org.springframework.boot:spring-boot-starter-mongodb"
    // testImplementation('org.springframework.boot:spring-boot-starter-test') {
	// 	exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	// }

    //compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.3.0.RELEASE'
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile("org.springframework.boot:spring-boot-starter-log4j2:$rootProject.ext.springBootVersion") {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-core'
        exclude group: 'org.apache.logging.log4j', module: 'log4j-jul'
        exclude group: 'org.slf4j', module: 'jul-to-slf4j'
    }
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.12.1'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.28'

    compile("com.fasterxml.jackson.core:jackson-core:2.9.8")
    compile("com.fasterxml.jackson.core:jackson-annotations:2.9.8")
    compile("com.fasterxml.jackson.core:jackson-databind:2.9.8")

    implementation "org.modelmapper:modelmapper:$rootProject.ext.modelMapperVersion"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation group: "javax.inject", name: "javax.inject", version: "1"
    implementation("org.springframework.boot:spring-boot-starter-actuator:$rootProject.ext.springBootVersion")
    implementation group: "com.google.guava", name: "guava", version: "20.0"

    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    annotationProcessor "org.projectlombok:lombok"
    implementation "io.springfox:springfox-swagger2:$rootProject.ext.swaggerVersion"
    implementation "io.springfox:springfox-swagger-ui:$rootProject.ext.swaggerVersion"

    testImplementation("org.mockito:mockito-junit-jupiter:$rootProject.ext.mockitoVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test:$rootProject.ext.springBootVersion") {
        exclude group: "junit", module: "junit"
    }

    // testImplementation("org.junit.jupiter:junit-jupiter-api:$rootProject.ext.junitVersion")
    // testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$rootProject.ext.junitVersion")
    // testImplementation("org.junit.platform:junit-platform-launcher" +
    //         ":$rootProject.ext.junitPlatformLauncherVersion")
    // testImplementation("org.junit.jupiter:junit-jupiter-params:$rootProject.ext.junitVersion")
    ////////////////
    
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')

    //compile group: 'org.springframework', name: 'spring-web', version: '5.0.8.RELEASE'
    compile('org.springframework.boot:spring-boot-starter-webflux')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')

    //implementation 'io.netty:netty-transport-native-epoll:4.1.51.Final'



}

task loaddata(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.crio.buildouts.integ.test.IntegrationTest'
}

configurations {
    implementationOnly {
        extendsFrom annotationProcessor
    }
}

apply plugin: "io.freefair.lombok"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
